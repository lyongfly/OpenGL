
package com.suryani.crosssite.activity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.content.Intent;
import android.os.Bundle;
import android.os.Looper;
import android.os.MessageQueue.IdleHandler;
import android.support.v4.widget.DrawerLayout.DrawerListener;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.ScrollView;
import android.widget.SimpleAdapter;
import android.widget.TextView;

import com.quidsi.activity.SearchCartGlobalEnabledActivity;
import com.quidsi.util.SiteUtil;
import com.suryani.R;
import com.suryani.adapter.ShopPageAdapter;
import com.suryani.adapter.TopMenuNavAdapter;
import com.suryani.crosssite.adapter.WagHomeAdapter;
import com.suryani.logic.MainService;
import com.suryani.logic.Task;
import com.suryani.model.Banner;
import com.suryani.model.Navigation;
import com.suryani.model.TopMenuNavigation;
import com.suryani.util.Config;
import com.suryani.util.NetUtil;
import com.suryani.util.TopBannerUtil;
import com.suryani.util.Util;
import com.suryani.volley.executor.impl.HomePageContentExecutor;
import com.suryani.volley.executor.impl.crossite.GetTopMenuNavigationExecutor;

public class ShopHomeActivity extends SearchCartGlobalEnabledActivity {

    private ListView shopview;
    private Navigation[] nav;
    private View footView;
    private TopBannerUtil topBannerUtil;
    private int tempSiteIndex;
    private ImageButton mBtnOursites,mBtnEasyReorder;
    private boolean isClickShopOurSites = false;
    private OnItemClickListener itemclick = new OnItemClickListener() {

        @Override
        public void onItemClick(AdapterView<?> parent, View view, int position, long id)
        {

            Intent intent = new Intent();
            Class<?> clazz = null;

            if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.diapers_id)
                    || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.soap_id)
                    || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.beautybar_id)
                    || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.casa_id)
                    || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.bookworm_id)
                    || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.vine_id)) {
            	if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.beautybar_id)
                        && view == footView) {
                    clazz = YoyoViewAllActivity.class;
                    intent.putExtra("shopWay", 3);
                    intent.putExtra("title", "Brands");
                } else if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.diapers_id)
                        && (view == footView || "Clothing".equals(nav[position].Name))) {
                    clazz = NavigationActivity.class;
                    if (view == footView) {
                        intent.putExtra("shopWay", 4);
                        intent.putExtra("title", "Sale");
                    } else {
                        intent.putExtra("title", "Clothing");
                    }
                }
                else {
                    clazz = SubNavigationActivity.class;
                    Config.isFromHomeBanner = false;
                    intent.putExtra("navObject", nav[position]);
                    // MyLogger.log("home nav id:"+nav[position].Id);
                }
            } else if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.wag_id)) {
                clazz = NavigationActivity.class;
                intent.putExtra("cid", view.getId());
            } else if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.yoyo_id)) {
                if (position == 0 || position == 5) {
                    clazz = ShopByAgeActivity.class;
                    if (position == 0)
                        intent.putExtra("title", "Age");
                    else
                        intent.putExtra("title", "Yoyo Picks");
                } else {
                    String title = null;
                    clazz = NavigationActivity.class;
                    switch (position) {
                        case 1:
                            title = "Category";
                            break;
                        case 2:
                            title = "Character";
                            break;
                        case 3:
                            title = "Brand";
                            break;
                        case 4:
                            title = "Sale";
                            break;
                    }

                    intent.putExtra("title", title);
                }
                Config.isFromHomeBanner = false;
                intent.putExtra("shopWay", position);
            } else if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.afterschool_id)) {
                clazz = NavigationActivity.class;
                Config.isFromHomeBanner = false;
                intent.putExtra("topMenuNavigation", topNav[position]);
            }

            intent.setClass(ShopHomeActivity.this, clazz);
            startActivity(intent);
        }
    };
    private TopMenuNavigation[] topNav;
    private ArrayList<Banner> bannerList;
  
    
    @Override
    protected void onCreate(Bundle savedInstanceState) {
    	Util.setCrossSiteIndexTOSite();
    	tempSiteIndex = Config.TEMP_SITE_INDEX;
    	super.onCreate(savedInstanceState);
    	actionBar.setDisplayShowTitleEnabled(false);
    	actionBar.setDisplayUseLogoEnabled(true);
    	actionBar.setLogo(SiteUtil.getSiteLogoResourceBySiteIndex(Config.TEMP_SITE_INDEX));
        getLayoutInflater().inflate(R.layout.shophome, mMainLayout);
        shopview = (ListView) findViewById(R.id.pubListView);
        findViewById(R.id.list_mylist).setVisibility(View.GONE);
        
        topBannerUtil = new TopBannerUtil(this, R.id.view_flipper, R.id.banner_viewpager, R.id.subNavigationLogo, R.id.radioGroup);
        topBannerUtil.setBannerList(bannerList);
        topBannerUtil.requestBannerList(Config.TASK_GET_BANNER_CROSS_SITE);
        init();

        final ScrollView sv = (ScrollView) findViewById(R.id.scroll_view);
        sv.scrollTo(0, 0);
        Looper.myQueue().addIdleHandler(new IdleHandler() {
            @Override
            public boolean queueIdle() {
                sv.scrollTo(0, 0);
                return false;
            }
        });
        mBtnOursites = (ImageButton) this.findViewById(R.id.btn_shop_our_sites);
        mBtnEasyReorder = (ImageButton) this.findViewById(R.id.btn_easy_reorder);
        
        mBtnEasyReorder.setOnClickListener(new OnClickListener() {
            
            @Override
            public void onClick(View v) {
                GotoMyListActivity(false);
            }
        });
        
        mBtnOursites.setOnClickListener(new OnClickListener() {
            
            @Override
            public void onClick(View v) {
                mDrawerLayout.openDrawer(Gravity.LEFT);
                isClickShopOurSites = true;
            }
        });
        
        mDrawerLayout.setDrawerListener(new DrawerListener() {
            
            @Override
            public void onDrawerStateChanged(int arg0) {
                
            }
            
            @Override
            public void onDrawerSlide(View arg0, float arg1) {
                
            }
            
            @Override
            public void onDrawerOpened(View arg0) {
                if(isClickShopOurSites){
                    mNavigation.setSelectedGroup(1);
                }
            }
            
            @Override
            public void onDrawerClosed(View arg0) {
                isClickShopOurSites = false;
            }
        });
    }

    

    @Override
    public void init() {

        Util.getLandingPages(ShopHomeActivity.this);
        removeFooterView();
        if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.diapers_id)
                || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.soap_id)
                || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.beautybar_id)
                || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.casa_id)
                || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.bookworm_id)
                || Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.vine_id)) {
            Task getNavigation = new Task(Config.TASK_GET_ALL_NAVIGATION_CROSS_SITE, null);
            getNavigation.setExcutor(new HomePageContentExecutor());
            MainService.addNewTask(getNavigation,this);
            showProgress(ShopHomeActivity.this, 1);
        } else if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.wag_id)) {
            WagHomeAdapter adapter = new WagHomeAdapter(this);
            shopview.setAdapter(adapter);
            shopview.setCacheColorHint(0);
            shopview.setOnItemClickListener(itemclick);
            Util.setListViewHeightBasedOnChildren(shopview);
        } else if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.yoyo_id)) {
            shopview.setAdapter(setSimpleAdapter());
            shopview.setCacheColorHint(0);
            shopview.setOnItemClickListener(itemclick);
            Util.setListViewHeightBasedOnChildren(shopview);
        } else if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.afterschool_id)) {
            Task getNavigation = new Task(Config.TASK_GET_ALL_TOPMENU_CROSS_SITE, null);
            getNavigation.setExcutor(new GetTopMenuNavigationExecutor());
            MainService.addNewTask(getNavigation,this);
            showProgress();
        }

    }
    
    private void removeFooterView(){
        if(footView != null && shopview.getFooterViewsCount() > 0){
            shopview.removeFooterView(footView);
        }  
    }
    
    protected void onNewIntent(Intent newintent){
    	if (Config.TEMP_SITE_INDEX != tempSiteIndex){
    		Util.setCrossSiteIndexTOSite();
        	tempSiteIndex = Config.TEMP_SITE_INDEX;
	    	topBannerUtil.setBannerList(null);
	    	topBannerUtil.requestBannerList(Config.TASK_GET_BANNER_CROSS_SITE);
	    	topBannerUtil.setBannerList(bannerList);
	    	actionBar.setLogo(SiteUtil.getSiteLogoResourceBySiteIndex(Config.TEMP_SITE_INDEX));
	        init();
    	}
    }

    @SuppressWarnings("unchecked")
    @Override
    public synchronized void refresh(Object... param) {
    	int option = (Integer) param[0];
        switch (option)
        {
            case Config.TASK_GET_ALL_NAVIGATION_CROSS_SITE:
                nav = (Navigation[]) param[1];
                if (nav != null)
                {
                    nav = deleteSale(nav);
                    ShopPageAdapter adapter = new ShopPageAdapter(ShopHomeActivity.this);
                    adapter.setList(nav);
                    addFooter();
                    shopview.setAdapter(adapter);
                    shopview.setCacheColorHint(0);
                    shopview.setOnItemClickListener(itemclick);
                    Util.setListViewHeightBasedOnChildren(shopview);
                }

                break;
            case Config.TASK_GET_ALL_TOPMENU_CROSS_SITE:
                topNav = (TopMenuNavigation[]) param[1];
                if (topNav != null)
                {
                    TopMenuNavAdapter adapter = new TopMenuNavAdapter(ShopHomeActivity.this);
                    adapter.setList(topNav);
                    shopview.setAdapter(adapter);
                    shopview.setCacheColorHint(0);
                    shopview.setOnItemClickListener(itemclick);
                    Util.setListViewHeightBasedOnChildren(shopview);
                }

                break;
            case Config.TASK_GET_BANNER_CROSS_SITE:
                bannerList = (ArrayList<Banner>) param[1];
                topBannerUtil.setBannerList(bannerList);
                topBannerUtil.initBanner();
                break;
        }

        checkNote(shopview);

        if (option != Config.TASK_GET_BANNER_CROSS_SITE)
            dismissProgress();
    }

    private Navigation[] deleteSale(Navigation[] myNav) {
        ArrayList<Navigation> navList = new ArrayList<Navigation>();
        Boolean isChange = false;
        for (Navigation sunNav : myNav) {
            if (sunNav != null && "sale".equalsIgnoreCase(sunNav.Name)) {
                isChange = true;
            } else {
                navList.add(sunNav);
            }
        }
        if (isChange) {
            return navList.toArray(new Navigation[0]);
        } else {
            return myNav;
        }
    }

    private SimpleAdapter setSimpleAdapter() {
        String[] shopWays = getResources().getStringArray(R.array.shop_ways);
        int[] imgIds = {
                R.drawable.shop_by_age, R.drawable.shop_by_category,
                R.drawable.shop_by_character, R.drawable.shop_by_brand,
                R.drawable.shop_sale, R.drawable.shop_yoyopicks
        };
        List<Map<String, Object>> mapList = new ArrayList<Map<String, Object>>();
        int arraySize = shopWays.length;
        for (int i = 0; i < arraySize; i++) {
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("icon", imgIds[i]);
            map.put("text", shopWays[i]);
            mapList.add(map);
        }
        String[] from = {
                "icon", "text"
        };
        int[] to = {
                R.id.row_shop_icon, R.id.rowDesc
        };
        return new SimpleAdapter(this, mapList, R.layout.list_cell_layout,
                from, to);

    }

    private void addFooter() {

        if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.beautybar_id)) {
            LayoutInflater inflater = LayoutInflater.from(this);
			footView = inflater.inflate(R.layout.list_cell_layout, null);
			ImageView image = (ImageView) footView
					.findViewById(R.id.row_shop_icon);
            TextView name = (TextView) footView.findViewById(R.id.rowDesc);
			image.setImageResource(R.drawable.brand_icon);
            name.setText("SHOP BY BRAND");
            shopview.addFooterView(footView);
        }
        if (Config.TEMP_SITE_INDEX == SiteUtil.getSiteIndexByResourceId(R.integer.diapers_id)) {
            LayoutInflater inflater = LayoutInflater.from(this);
			footView = inflater.inflate(R.layout.list_cell_layout, null);
			ImageView image = (ImageView) footView
					.findViewById(R.id.row_shop_icon);
            TextView name = (TextView) footView.findViewById(R.id.rowDesc);
			image.setImageResource(R.drawable.diapers_sale);
            name.setText("Sale");
            shopview.addFooterView(footView);
        }
    }

    @Override
    protected void onResume() {
        super.onResume();
        Util.setCrossSiteIndexTOSite();
        topBannerUtil.changeImageBanner(Config.TEMP_SITE_INDEX);
        NetUtil.offlinePromptMessage(this);
        clearFilter();
    }



    @Override
    public void onBackPressed() {
        this.GotoHomeActivity(this,Intent.FLAG_ACTIVITY_CLEAR_TOP);
    }
}
